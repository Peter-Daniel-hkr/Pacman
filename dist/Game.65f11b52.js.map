{"version":3,"sources":["js/Input.js","js/Sound.js","js/Pacman.js","js/Ghost.js","js/TileMap.js","js/Game.js"],"names":["MovingDirection","up","down","left","right","Sound","eatDotSound","Audio","powerDotSound","eatGhostSound","gameOverSound","gameWinSound","Pacman","x","y","tileSize","speed","tileMap","event","keyCode","currentMovingDirection","requestedMovingDirection","madeFirstMove","pacmanAnimationTimerDefault","pacmanAnimationTimer","pacmanRotation","Rotation","powerDotActive","powerDotAboutToExpire","timers","document","addEventListener","score","highScore","undefined","dom_score","querySelector","ctx","pause","ghosts","size","save","translate","rotate","Math","PI","drawImage","pacmanImages","pacmanImageIndex","restore","JSON","parse","localStorage","getItem","setItem","stringify","pacmanImage1","Image","src","pacmanImage2","pacmanImage3","Number","isInteger","didCollideWithEnvironment","length","eatDot","innerHTML","updateHighScore","play","eatPowerDot","forEach","timer","clearTimeout","powerDotTimer","setTimeout","push","powerDotAboutToExpireTimer","collideGhosts","filter","ghost","collideWith","splice","indexOf","Ghost","movingDirection","floor","random","Object","keys","directionTimerDefault","directionTimer","scaredAboutToExpireTimerDefault","scaredAboutToExpireTimer","pacman","image","normalGhost","scaredGhost","scaredGhost2","newMoveDirection","min","max","TileMap","yellowDot","pinkDot","wall","powerDot","powerDotAnmationTimerDefault","powerDotAnmationTimer","row","gameMap","column","tile","canvas","width","height","direction","nextColumn","nextRow","fillStyle","fillRect","flat","getElementById","getContext","GAME_OVER","YOU_WON","YOU_LOSE","restart","soundElement","getPacman","getGhosts","gameOver","gameWin","gameLoop","draw","drawGameEnd","checkGameOver","checkGameWin","didWin","isGameOver","some","showYouWon","drawHighScore","showYouLose","setCanvasSize","setInterval","audioManager","imgSrc","getAttribute","SOUND_IMG","setAttribute","console","log","muted","location","reload","style","display","gradient","createLinearGradient","addColorStop","textAlign","font","fillText"],"mappings":"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AuD,CAAvD,CAtBQ,CAnBY;ACoClBV,AFlCF,SAAKW,KAAL,GAAaA,IEkCLN,CFlCR,YEkCE,CAAoB0D,IAApB;AACD,AFlCD,ADJ0C,AEE1C,SDEKnD,ACFAF,ODEL,CCFA,EDEeE,CCFCF,MDEhB,ECFA;ACqCD,ADnCC,SAAKuF,SAAL,GAAiB,IAAI7C,KAAJ,EAAjB;ACoCH,AFlCG,ADN0C,AEK1C,SAAK6C,SAAL,CAAe5C,GAAf,GAAqB,uBAArB,CAJoB,CAKpB;;ACoCJ,AFlCI,ADR0C,AEQ1C,SCkCKgF,AFlCAtD,ACAAmB,OAAL,GCkCJ,ADlCmB,GCkCG,CDlCC9C,CDAnB,GAAuBb,CCAR,EAAf,CDA2B,CAACyC,KAAL,CACrBzC,IAAI,CAAC0C,MAAL,KAAgBC,MAAM,CAACC,IAAP,CAAYxF,cAAZ,EAA6BgE,MADxB,CAAvB;AEmCF,AF/BE,ACHA,SCkCKzB,AF/BAkD,ACHAc,MCkCM,CAACoC,ADlCZ,CAAajF,GCkCR,ADlCL,CCmCA,EDnCmB,ODGnB,CEgCCqB,KAAD,QDnCA,YDG6B,IAA7B,0BAA6B,IAA7B,EAA0C,EAA1C,EAA8C,EAA9C;AEgCA,AF/BA,ADb0C,AEW1C,SDEKW,ACFAc,ECiCM,CAACX,CDjCZ,GAAY,ECiCM,CAAClE,CDjCH8B,GDEhB,ECFY,CDEU,CCFtB,IDE2BgC,EE+BhB,IAA0BV,KAAK,CAACC,SF/B3C,EE+BqC,CAAkBa,MAAlB,CAArC;AAAA,AF7BA,ACHA,GC+BK,CAAP,KF5BOF,ACHAa,IAAL,CAAU9C,GAAV,GAAgB,kBAAhB,EDGA,GAAuC,EAAvC;AE+BH,AF9BG,ADhB0C,AEc1C,SDEKkC,ACFAa,QAAL,GAAgB,KAAKF,OAArB,CDEA,GAAgC,KAAKZ,+BAArC;AACD,ACFC,SAAKe,4BAAL,GAAoC,EAApC;ACiCJ,AHhD8C,AEgB1C,SCgCKpE,ADhCAqE,KCgCT,GAAiB,aDhCb,GAA6B,KAAKD,4BAAlC;ACiCF,ADhCC,IAED,KC8BO,CAACb,MAAM,CAACvE,aAAR,IAAyB4G,QAAzB,IAAqCC,OAA5C;AACD,AHlD6C,sCA+BjC;AACT/H,MAAAA,KCbF,A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,KAA1B,EAAiCD,SAAjC;AACAE,AHsBE,EGtBFA,OAAO,CAACC,EHsBFrI,CGtBN,CAAYkI,GHsBD,CAACjI,KGtBZ,EHsBM,IAAiB,EAArB,EAAyB;AGrB3Bd,AHsBI,WECJ,GFDQ,GGtBFM,EHsBM,CAACS,SGtBb,CAAmBoI,ADuBTxI,KCvBV,ADuBA,EAAiB,CCvBUX,IHsBnB,IAA+BL,OGtBNW,QHsBsBR,IGtB5B,AHsBvB,CGtB0CqJ,CHuBxC,IGvBqB,CHuBjB,CAACpI,CGvB2C,KAA3B,GAAmC,IAA9D,SHuBM,GAA8BpB,eAAgBI,KAA9C;AGtBNC,AHuBI,AEAF,UFAE,CEAG,IFAC,AEAGuG,CFAFvF,CGvBHX,CDuBQ,GAAG,CAAf,EAAkBkG,GAAG,GCvBvB,ADuB0B,CCvBN4C,IDuBW3C,CCvB/B,GAA4BxG,CHuBxB,EEAsB,CFAUL,AEAGgE,MAArC,EAA6C4C,GCvBblG,ADuBgB,EAAhD,EFAkDN,AEAE,KFAlD,IGvBwB,CAAoBoJ,KAApB,GAA4B,KAA5B,GAAoC,IAAhE;AACAnJ,AHuBI,AEAA,UFAA,GEAK,EFAD,CAACiB,CGvBHhB,ADuBOwG,MAAM,GAAG,CAAlB,CCvBJ,CAAkB0C,AHuBd,AEAqB1C,GFAA,EGvBzB,CDuB+B,CFA3B,CGvBsBzG,CDuBQ,KAAKwG,OAAL,CAAaD,CCvBftG,EDuBE,EAAkB0D,MAAhD,CCvBsB,CAAkBwF,ADuBgB1C,KCvBlC,CDuBwC,ECvBd,ADuBhD,EAAkE,GCvB5C,GAAkC,IAA5D;AACAzG,AHuBG,AEAG,cAAI0G,GCvBJvG,CDuBQ,GAAG,KAAKqG,ICvBtB,CAAoB2C,EDuBH,CAAa5C,ECvB9B,CDuBiB,ECvBWvG,ADuBOyG,MAAlB,CAAX,QCvB4BtG,aAAN,CAAoBgJ,KAApB,GAA4B,KAA5B,GAAoC,IAAhE;AACAnJ,iBAAMI,aAAN,CAAoB+I,KAApB,GAA4BnJ,eAAMI,aAAN,CAAoB+I,KAApB,GAA4B,KAA5B,GAAoC,IAAhE;AACD,AHuBG,AEDI,YFCAtI,EEDI6F,GFCC,CAAC5F,AEDE,ED/DJkB,GC+DS,CAAb,CD/DSwD,ADgET,CEDgB,GFCC,EAArB,EChEqB,ADgEI;AC/DzB,ADgEE,AEDI,MD/DFA,MAAM,CAAClE,CDgEL,KAAI,CAACP,OChEX,EAA2B,aDgErB,IAA+BpB,eAAgBC,EAAnD,EACE,KAAI,CAACmB,sBAAL,GAA8BpB,eAAgBE,IAA9C;AGvBR4H,AFzCM,ADiEA,AEFI,OCtBH,CAAC/F,EHwBF,KAAI,CAACV,CEFIwF,OCtBf,ADsBU,CCtBe,ADsBFD,GAAb,EAAkBE,ECtB5B,EAAkC,EDsBxB,IFEJ,AEFgC,CAA5B,EFE4B9G,GGxBQ,YHwBQE,IAAhD,6CCjEmC2F,MAAnC;AE0CJ4D,AFzCG,ADiEC,AEFI,ECtBRA,CF3CE,MAEO,CEyCD,AHwBJ,CGxBKC,IHwBD,CAACpI,CGxBT,EDsBe,IAAIV,MFEf,GAAqB,IAArB,EEFW,CACLkG,MAAM,GAAG,KAAK/F,QADT,EAEL6F,GAAG,GAAG,KAAK7F,QAFN,EAGL,KAAKA,QAHA,EAILC,KAJK,EAKL,IALK,CAAP;ACrBT,AFzCK,ADiED,AEII,CC9BT,QFvCW8E,KAAL,GAAa,KAAKC,WAAlB;AACD,ADiEF,AEII;AC3BP,AHxF8C,AEoHzC,SC5BI6C,UAAT,GAAsB;AACpBjB,AF1CEtF,ACsED,EC5BDsF,AF1CEtF,GAAG,CAACS,KE0CG,CAAC6G,GF1CR,CAAc,CE0ChB,CAAgBC,GF1CK9D,IE0CrB,CF1CE,EE0CwB,AF1CE,KAAKjF,CAA/B,CE0CF,CF1CoC,KAAKC,CAAvC,EAA0C,KAAKC,QAA/C,EAAyD,KAAKA,QAA9D;AE2CF6G,AF1CC,AD/CC,EGyFFA,OAAO,AHzFA/G,CGyFC8I,AHzFN,GAAS9I,CAAT,CGyFF,CAAc+I,OAAd,GAAwB,OAAxB;AACD,AHzFG,SAAK9I,CAAL,GAASA,CAAT;AACA,SAAKC,EEoHP,MFpHE,GAAgBA,QAAhB,EEoHQC,KAAV,EAAiB,GDrEa6E,QAAQ;AE2CxC,AF1CI,AD/CA,AEoHA,MDrEIA,GE0CCiD,AHzFA9H,CEoHCuB,EDrEI,CAACX,CD/CX,EEoHY,CFpHCZ,EEoHE,CC3BnB,CD2BI,CFpHA,CGyFmB,WF1CnB,EAAkC;AE2CpC2G,AF1CI,AD/CF,EGyFFA,OF1CS/B,AD/CF3E,EGyFE,CAAC0I,IHzFR,CGyFF,CAAgBC,CHzFC3I,MGyFjB,CHzFE,EGyFwB,KF1CtB,EE0CJ;AACA4G,AHxFE,AEmHA,EC3BFA,OHxFOzG,CGwFC,CAACuI,AD2BF,IAAI/C,CC3BX,CAAegD,CD2BD,GAAG,CAAf,EC3BF,AD2BoBhD,GC3BK,AD2BF,GAAG,CFnHxB,GGwFF,AHxFgC,CEmHDC,GFnH7B,IEmHwB,CAAa7C,MAArC,EAA6C4C,GAAG,EAAhD,EAAoD;AC1BvD,AF3CK,AD7CF,AEmHE,QDtEI,CD7CDvF,IC6CMuE,ACsEJ,IAAIkB,MAAM,GAAG,CAAlB,EAAqBA,IFnHvB,EEmH6B,CFnHG,CC6C1B,CCsE0B,EFnHhC,EC6CwC,CAAtC,ACsEmCD,EDtEM,KCsEX,CAAaD,GAAb,EAAkB5C,MAAhD,EAAwD8C,MAAM,EAA9D,EAAkE;ADrEhE,AD5CJ,AEkHI,SFlHCvF,EC4CIqE,GCsECmB,IAAI,GAAG,KAAKF,OAAL,CAAaD,CDtE1B,CD5CJ,CEkHiB,CDtEmB,CD5CD,AEkHAE,EFlHnC,EC4CyCnB,ECsExB,CAAb,4BDtEA;AE4CR,AHvFI,SGuFKkD,AHvFArH,aGuFT,GAAyB,IHvFrB,GAA4B,IAA5B;AGwFF,AF5CM,AD1CJ,AEgHI,MC1BFS,GHtFGR,CC0CG,ICsEAsF,CC1BG,AF5CEjB,GE4CC5C,AD0BF,EDtEJ,EE4CU,AD0BF,CC1BGC,AHtFnB,AEgHI,EDtEmB,ACsEJ,CFhHG,EGsFR,CAAWC,CF5CG4C,CD1CDtE,QAAL,CAActB,CGsFC,AF5CjC,CE4CkCiD,CF5CG,ED1CzC,IGsFyB,CAAqB,YAArB,CAAX,CAAhB;AACA,AF5CQ,ADzCN,AE+GM,MC1BJwG,GHrFGlI,ICyCMmE,CE4CD,GAAGzD,AD0BFwE,CDtEL,EE4CU,CAACiD,AF5CE,EDzCnB,CE+GM,CAAalD,CDtEKX,ADzCF,EE+GhB,EAAkBa,CF/GxB,KE+GM,EDtEA,ECsE4B,CC1BrB,AD0BP,CC1BgC,CAAzB,EAA4B,CAA5B,EAA+BE,MAAM,CAACC,KAAP,GAAe,CAA9C,EAAiD,EAAjD,CAAf;AACA4C,AF5CO,ADzCL,AE+GMtH,EC1BRsH,KF9CM,EDvCCjI,CGqFC,CAACmI,CD0BDxH,CDtEK,KCsEC,CAACoC,IC1Bf,AD0BQ,CC1Bc,AD2BZ,GC3BV,CD2BcQ,CC3Ba,CHrFzB,GAA6B,IGqF/B,CHrFE,IEgHQ,CACE2B,MAAM,GAAG,KAAK/F,QADhB,EAEE6F,GAAG,GAAG,KAAK7F,QAFb,EAGE,KAAKA,QAHP,EAIEC,KAJF,EAKE,IALF,CADF;ACzBR6I,AF5CQ,ADzCN,AEuHK,EClCPA,OHrFOhI,CGqFC,CAACkI,EF5CIjE,EDzCX,GCyCM,ADzCQ,EAAd,CCyCmB,EE4CrB,CAAsB,EF5CIE,CE4C1B,EAA2B,QF5CnB,CE4CR;AACA3D,AF5CO,ADxCL,AEsHG,EClCLA,GAAG,CAACiF,GHpFGhG,MGoFP,GAAgBuI,IHpFd,GAAqB,CGoFvB,IHpFE;AGqFFxH,AF5CK,ADvCHP,AEqHC,EClCHO,EHnFEP,CGmFC,CAACkI,MHnFM,CAACjI,EGmFX,GAAgB,QAAhB,GHnFE,CAA0B,SAA1B,wBAAqC,IAArC,aArB0C,CAqBW;AGoFvDM,AF5CG,EE4CHA,CFtDE,EEsDC,CAAC4H,GF5CK,CE4CT,GAAW,mCAAX;AACA5H,AF5CI,ADvCF,AEoHA,ECjCFA,GAAG,CAAC6H,GF5CKpE,IC6EAvD,CCjCT,AF5CI,CE4CS,EF5CI,EC6Ef,GD7EoByD,WAAlB,GE4C8B/D,SAAlC,EAA6C+E,MAAM,CAACC,KAAP,GAAe,CAA5D,EAA+D,EAA/D,gBH1G4C,CAyB1C;AGkFH,AF5CI,AC6EF;AD5EA;ADtCC,SAAKjF,KAAL,GAAa,CAAb;AACA,SAAKC,EEmHP,OFnHE,GAAiBC,QCuCA,CDvCjB,IEmHY8E,MAAd,EAAsB;AD3EpB,ADvCA,AEmHAA,MAAAA,CD5EKtB,EDvCAvD,GEmHC,CAAC8E,KFnHP,AEmHA,GD5EA,ADvCiBnF,AEmHF,KAAK+E,GFnHK,CAACzE,GEmHX,CAAa,CAAb,EAAgB4B,MFnHd,AEmHF,CFnHyB,EEmHA,KAAKjD,CFnH5B,CAAjB,MEmHA;AD3EA,ADvCD,AEmHCiG,MD5EId,AC4EJc,MAAM,CAACE,MAAP,GD5EoB,AC4EJ,GD5EO,EC4EFL,ED5ErB,KC4EgB,CAAa7C,MAAb,GAAsB,KAAKjD,QAA3C;AACD;AD5EC,MAAI,KAAK2E,cAAL,IAAuB,CAA3B,EAA8B;AAC5B,SAAKA,cAAL,GAAsB,KAAKD,qBAA3B;AACAS,IAAAA,ODjCJ,AE6GA,SD5EoB,GAAGtD,EDjClBP,ECiCsB,CAACgD,ADjC5B,EAAU/C,GCiCa,CACjBM,CDlCN,EAAiBL,CCkCP,CAAC+C,IDlCX,ECkCM,ADlCmB,CE6GCzE,CAA1B,EAA6BC,CD3EPyE,AC2EtB,EAAgC4B,ID3EJ,CAAC3B,IAAP,AC2EtB,CD3EkCxF,CC2ES,aD3ErB,EAA6BgE,MAD5B,CAAnB;AAGD,ADnCD,AE6GA,UF7GI,AE6GAmD,CF7GC7E,KAAL,EAAY,CE6GC,IAAI,IAAjB,EAAuB;AF5GrB,AE6GA;ADzEF,AC0EC,MD1EG4D,gBAAgB,IAAI,IAApB,IAA4B,KAAKd,eAAL,IAAwBc,gBAAxD,EAA0E;AACxE,ADpCA,QCqCErC,MAAM,CAACC,SAAP,CAAiB,KAAKjD,CAAL,GAAS,KAAKE,QAA/B,KACA8C,MAAM,CAACC,SAAP,CAAiB,KAAKhD,CAAL,GAAS,KAAKC,QAA/B,CAFF,EAGE;AACA,ADvCH,AE8GD,UDtEM,ACuEJ8C,CDvEK,KAAK5C,ACuEJ,CAAC6C,MDvEF,CAAaC,ECuElB,CAAiBlD,CAAC,GAAG,KAAKE,QAA1B,KDvEK,ACwEL8C,CDvEM,KAAKhD,ACuEL,CDxED,ACwEEiD,EDtED,KAAKhD,CAFN,CCwEL,CDrEMoF,ACqEWpF,CAAC,GAAG,KAAKC,ODxErB,CADH,ACyEF,CAFF,CDjEM,CCoEJ;ADnEI,ACoEJ,YAAI+F,CDpEK1B,KCoEC,GAAG,CAAb,MDpEI,GAAuBc,gBAAvB;AACD,AD9CL,AEkHE,YAAIU,GAAG,GAAG,CAAV;ADnEC,ACoED,YAAIQ,UAAU,GAAG,CAAjB;ADnED,AD/CD,AEmHE,YAAIC,OAAO,GAAG,CAAd;ADnEH;AD/CC,AEoHE,gBAAQF,SAAR,4CFpHa5E,MAAf;AEqHI,eAAKvC,GDpEH,YCoEmBI,KAArB;ADnEJ,ADhDA,AEoHMgH,MDnEJ,CAAC,GDjDG5E,ECiDEvB,ACmEFmG,EFpHI,GAAG,ECiDV,CAAarD,EDjDEhD,AEoHF,GAAGF,CAAC,GAAG,CFpHV,GAAgB,CAA7B,AEoH4BE,QAAtB,GDnEH,CACC,KAAKF,CADN,EAEC,KAAKC,CAFN,EAGC,KAAKsE,eAHN,CADH,EAME;AACA,ADtDF/C,AEoHMyE,MFpHNzE,GAAG,CAACI,ECsDM,AC8DJqE,EFpHN,GCsDe1B,CC8DH,GAAGgC,UAAU,CD9DvB,EC8D0B,KAAKrG,QAA3B;AD7DF,ADtDJsB,AEoHMuE,MFpHNvE,GAAG,CAACK,CCsDK1C,CC8DH4G,GAAG,GAAG9F,CFpHZ,AEoHa,CFpHC,EEoHE,GFpHGD,CCsDMZ,ADtDX,CEoHOc,CD9DjB,CDtDmByB,IAAvB,EAA6B,AEoHvB,KFpH4B1B,CAAL,GAAS0B,IAAtC;ACuDM,ADtDNH,AEoHM,MFpHNA,GAAG,CAACM,GCsDO7B,CAAL,EDtDN,CAAY,CCsDI,IDtDCW,CCsDIT,KAAf,QDtDM,GAAsB,EAAtB,GAA2B4B,IAAI,CAACC,EAAjC,GAAuC,GAAlD;ACuDM,ADtDNR,MAAAA,GAAG,CAACS,SAAJ,CACE,KAAKC,YAAL,CAAkB,KAAKC,gBAAvB,CADF,EAEE,CAACR,IAFH,EAGE,CAACA,IAHH,EAIE,KAAKzB,QAJP,EAKE,KAAKA,QALP;AAQAsB,AE4GI,MF5GJA,GAAG,CAACY,KE4GKjD,EF5GT,aE4GyBG,IAArB;AD7DA,AD9CL,AE4GOiH,WD9DGpH,CC8DHoH,UAAU,GAAGvG,CD9DMX,AC8DL,GAAG,CD9DnB,IC8DwBa,QAAtB;AD7DA,AC8DA+F,YAAAA,CD9DKhG,CAAL,IAAU,AC8DJ,GAAGsG,ED9DMpG,KAAf,GC8DmB,GAAG,KAAKD,QAA3B;AD7DA,AC8DA6F,YAAAA,GAAG,GAAG9F,CAAC,GAAG,KAAKC,QAAf;AACA,WFyDR,2BAAkB;ACvHZ,ADwHJ,WCxHSf,ADwHJiC,SAAL,GAAiBiB,GCxHQ/C,CDwHJ,CAACgD,ECxHlB,GDwHa,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;ACvHM,ADwHN,AE1DI,WF0DCpB,ECxHMpB,CAAL,CC8DGb,GD9DO,EDwHhB,GCxHqBgB,ADwHJ,IAAjB,CCxHM,EDwHmB,AE1DAf,EAArB,GF0D0BgC,SAAL,GAAiB,KAAKD,KAA/C;ACvHM,ADwHN,AE1DMqF,WF0DDpF,CE1DCoF,OAAO,CF0Db,EE1DgBvG,CF0DC,AE1DA,GAAG,EF0DEkB,GE1DGjB,EF0DzB,GACK,GE3DC,EF2DIkB,SAAL,GAAiB,KAAKA,SAD3B,GAEK,KAAKA,SAAL,GAAiB,KAAKD,KAF3B;AAGAoB,AE5DMwD,MF4DNxD,ME5DMwD,GAAG,GF4DG,AE5DAS,CF4DC/D,ME5DM,CF4DnB,CAAqB,CE5DC,KAAKvC,MF4D3B,EAAmCmC,AE5D7B,IF4DiC,CAACK,SAAL,CAAe,KAAKtB,SAApB,CAAnC;AC1HI,AD2HL,AE5DO6E,WD/DG9G,CC+DH8G,MAAM,GAAGjG,CAAC,GAAG,CD/DMT,IC+DDW,CD/DpB,OC+DE;AD9DA,AC+DA,aD/DKF,CAAL,IAAU,KAAKG,KAAf;AACA;AAZJ,AC2EE,eAAKhB,eAAgBE,IAArB;AD7DH,AC8DKmH,YAAAA,OAAO,GAAGvG,CAAC,GAAG,KAAKC,QAAnB;AD7DP,AC8DO6F,YAAAA,GAAG,GAAGS,OAAO,GAAG,KAAKtG,QAArB;AACA+F,YAAAA,MAAM,GAAGjG,CAAC,GAAG,KAAKE,QAAlB;AACA,kBD9DAoF,KAAKC,KAAK;AAChB,ACyCE,SDzCKxD,IAAI,CAACyC,KAAL,CAAWzC,IAAI,CAAC0C,KD1DL,CC0DA,MAAiBc,GAAG,GAAGD,GAAN,GAAY,CAA7B,CAAX,IAA8CA,GAArD;AACD,AD1DC,MAAM3C,YAAY,GAAG,IAAIC,KAAJ,EAArB;AACAD,AEuHE,EFvHFA,UEuHQuD,EFvHI,CAACrD,CEuHD,EFvHZ,CEuHe,EFvHI,GEuHCmD,OAAL,CAAaD,GAAb,EAAkBE,EFvHjC,IEuHe,CAAb;AFrHF,MAAMnD,YAAY,GAAG,GCyDT,CDzDaF,KAAJ,EAArB;AC0DA,ADzDAE,AEqHE,EFrHFA,KCyDKoC,KC4DCgB,EFrHM,CAACrD,CEqHH,ED5DV,ADzDA,GCyDmB,ADzDA,AEqHJ,CAAb,EAAgB,CD5DKD,KAAJ,EAAnB,ODzDA;AC0DA,ADxDA,AEoHI,MFpHEG,CCwDDmC,WAAL,ADxDkB,CCwDDrC,EDxDI,CCwDrB,GAAuB,ADxDED,KAAJ,EAArB,aCwDA;AAEA,ADzDAG,AEoHI,EFpHJA,KCyDKoC,ODzDO,CAACtC,EEoHF,CD3DX,ADzDA,GCyDmB,ADzDA,AEoHf,ID3DmBD,KAAJ,EAAnB,ODzDA;AC0DA,ADxDA,AEmHG,OD3DEuC,ADxDAjD,WCwDL,CAAiBW,ADxDjB,GCwDA,ADxDoB,CAClBF,ECuDqB,UDxDH,EAElBG,YAFkB,CCwDpB,CDrDEC,YAHkB,EAIlBD,YAJkB,CAApB;AC0DA,ADnDA,AE6GC,OD1DIsC,ADnDAjD,YCmDL,GAAoB,CDnDpB,GCmDwBS,ADnDA,CAAxB,ICmDoB,EAApB;AACA,ADnDD,OCmDMwC,YAAL,CAAkBvC,GAAlB,GAAwB,0BAAxB;AAEA,ACwDA,ODxDKoC,KAAL,CCwDO,EDxDM,GCwDb,EDxDkBC,WAAlB;AACD,ACwDA,kBF7EO;AACN,MAAI,KAAK3E,sBAAL,KAAgC,KAAKC,wBAAzC,EAAmE;AACjE,QACEwC,MAAM,CAACC,SAAP,CAAiB,KAAKjD,CAAL,GAAS,KAAKE,QAA/B,KACA8C,MAAM,CAACC,SAAP,CAAiB,KAAKhD,CAAL,GAAS,KAAKC,QAA/B,CAFF,EAGE;AACA,UACE,CAAC,AEwET,KFxEcE,OAAL,CAAa8C,KEwEb,oBFxEA,CACC,KAAKlD,CADN,EAEC,KAAKC,CAFN,EAGC,KAAKO,wBAHN,CADH,EAOE,KAAKD,sBAAL,GAA8B,KAAKC,wBAAnC;AACH,AEkEH,aAAO,mEAAqB,CAA5B;AFjEC,AEkEF;;AFhEC,MACE,KAAKJ,OAAL,CAAa8C,yBAAb,CACE,KAAKlD,CADP,EAEE,KAAKC,CAFP,EAGE,KAAKM,sBAHP,CADF,EAME;AACA,SAAKI,EE+DT,gBAAOX,CAAP,CF/DI,CE+DMC,CAAV,CF/DgC,CE+DnB,GF/DT;AACA,AE+DF,SF/DOkC,CE+DD4D,GAAG,GAAG9F,CAAC,GAAG,KF/Dd,AE+DmBC,GF/DK,CAAxB,IE+DF;AF9DE,AE+DF,UAAM+F,MAAM,GAAGjG,CAAC,GAAG,KAAKE,QAAxB;AF9DC,GAVD,MAUO,IACL,KAAKK,sBAAL,IAA+B,IAA/B,IACA,KAAKI,oBAAL,IAA6B,IAFxB,EAGL;AACA,AE2DF,SF3DOA,CE2DHqC,MAAM,CAACC,SAAP,CAAiB8C,EF3DnB,CE2DE,EF3D0B,GE2DD/C,EF3DMtC,IE2DA,CAACuC,SAAP,CAAiBgD,MAAjB,CAA7B,EAAuD,GF3DrD;AACD,AE2DC,YAAI,KAAKD,OAAL,CAAaD,GAAb,EAAkBE,MAAlB,MAA8B,CAAlC,EAAqC;AACnC,eAAKD,OAAL,CAAaD,GAAb,EAAkBE,MAAlB,IAA4B,CAA5B;AF1DJ,AE2DI,UF3DI,KAAK1F,EE2DF,IAAP,gBF3DJ;AACE,AE2DC,SF3DIpB,eAAgBC,EAArB;AACE,AE2DH,WF3DQa,CAAL,IAAU,KAAKE,KAAf;AACA,WAAKS,cAAL,GAAsB,KAAKC,QAAL,CAAczB,EAApC;AACA,AE0DJ,aAAO,KAAP;AACD;AF1DG,SAAKD,eAAgBE,IAArB;AACE,WAAKY,CAAL,IAAU,KAAKE,KAAf;AACA,WAAKS,AE0DX,cF1DM,GAAsB,IE0DhBZ,CF1DqBa,AE0DjC,EAAeZ,CAAf,EAAkB,GF1DU,CAAcZ,IAApC;AACA,AE0DJ,UAAM0G,GAAG,GAAG9F,CAAC,GAAG,KAAKC,QAArB;AACA,UAAM+F,MAAM,GAAGjG,CAAC,GAAG,KAAKE,QAAxB;AF1DE,SAAKf,eAAgBG,IAArB;AACE,AE0DJ,UAAI0D,CF1DKhD,CAAL,IAAU,AE0DJ,CAACiD,IF1DQ9C,KAAf,AE0DA,CAAiB4F,GAAjB,KAAyB/C,MAAM,CAACC,SAAP,CAAiBgD,MAAjB,CAA7B,EAAuD;AFzDnD,AE0DF,WF1DOrF,CE0DDsF,IAAI,GAAG,KAAKF,CF1DhB,GAAsB,GE0DX,CAAaD,CF1DGlF,EE0DhB,EAAkBoF,IF1DP,CAAc3G,CE0DzB,CAAb,EF1DE;AACA;AE0DF,YAAI4G,IAAI,KAAK,CAAb,EAAgB;AFzDhB,AE0DE,SF1DG/G,ME0DE6G,OAAL,CAAaD,CF1DMxG,EE0DnB,EAAkB0G,CF1DpB,KE0DE,IAA4B,CAA5B;AFzDA,AE0DA,WF1DKjG,CAAL,IAAU,CE0DH,IF1DQG,AE0Df,KF1DA;AACA,AE0DD,WF1DMS,cAAL,GAAsB,KAAKC,QAAL,CAActB,KAApC;AACA,AE0DH;AF1ED;AAkBD,AEyDC,aAAO,KAAP;AACD;qBFxDU;AACT,MAAI,KAAKoB,oBAAL,IAA6B,IAAjC,EAAuC;AACrC;AACD;;AACD,OAAKA,oBAAL;;AACA,MAAI,KAAKA,QE9GFa,KAAKyE,OF8GR,CE9GgBF,GF8Ga,CAAjC,CE9GyBpE,CF8GW,KE9GL;AF+G7B,AE9GFH,EAAAA,GAAG,CAACS,GF8GGtB,ME9GP,CACE,KAAK8E,QF6GL,CE9GF,EF8G8B,AE5G5BQ,KF4GiCvF,CE5G3B,GAAG,KAAKR,QAFhB,EAGE6F,GAAG,GAAG,EF2GN,GE3GW7F,QAHb,EAIEyB,IAJF,EAKEA,IALF;AF+GE,AExGH,SFwGQQ,gBAAL;AACA,QAAI,KAAKA,gBAAL,IAAyB,KAAKD,YAAL,CAAkBiB,MAA/C,EACE,KAAKhB,gBAAL,GAAwB,CAAxB;AACH,wBEzGWX,KAAKyE,QAAQF,KAAKpE,MAAM;AF0GrC,AEzGC,OAAKmE,qBAAL;;AACA,MAAI,KAAKA,SF0GD,YE1GJ,KAA+B,CAAnC,EAAsC;AF2GtC,AE1GE,MF0GE,GE1GGA,EF0GE1F,OAAL,CAAagD,MAAb,CAAoB,IE1GtB,CF0G2BpD,CAAzB,CE1G2B,CF0GC,IE1GI6F,CF0GC5F,CAAjC,KAAuC,KAAKQ,aAAhD,EAA+D,CE1G7D;AF2GA,SAAKU,KAAL,IAAc,CAAd;AACA,AE3GA,QAAI,CF2GCG,IE3GIsE,KF2GT,CAAevC,EE3GX,IAAiB,GF2GrB,EE3G0BqC,OAA1B,EAAmC,EF2GL,KAAKvE,KAAnC;AACA,AE3GE,SF2GGmC,EE3GEsC,QAAL,GAAgB,EF2GlB,GE3GuBH,SAArB;AACD,KAFD,MAEO;AF2GPjG,AE1GE,WAAKoG,QF0GDnG,AE1GJ,GAAgB,KAAKiG,GF0GvB,CAAkBnC,GE1GhB,CF0GF;AACD,AE1GE;AF2GJ,AE1GE;;AACD/B,EAAAA,GAAG,CAACS,SAAJ,CAAc,KAAK2D,IF2GN,IE3Gb,EAA6BK,MAAM,GAAGtE,IAAtC,EAA4CoE,GAAG,GAAGpE,IAAlD,EAAwDA,IAAxD,EAA8DA,IAA9D;AF2Ga,AE1Gd;;AF2GC,MAAI,KAAKvB,OAAL,CAAaoD,CEzGThC,KAAKyE,KFyGT,CAAyB,EEzGRF,GFyGa/F,CAA9B,CEzGsB2B,CFyGW,KAAK1B,AEzGV,CFyG5B,CAAJ,EAA8C;AAC5C,AEzGFuB,EAAAA,GAAG,CAACS,GFyGGd,KAAL,CEzGF,CACE,EFwGc,EAAd,CExGKwE,IADP,EAEEM,MAAM,GAAG,KAAK/F,QAFhB,EAGE6F,GAAG,GAAG,KAAK7F,QAHb,EAIEyB,IAJF,EAKEA,IALF;AF0GE,AEnGH,SFmGQL,SAAL,CAAe+B,SAAf,aAA8B,KAAKlC,KAAnC;AACA,SAAKmC,eAAL;qBElGO9B,KAAKyE,QAAQF,KAAKpE,MAAM;AFmG/BnC,AElGFgC,EAAAA,GAAG,CAACiF,SAAJ,GAAgB,CFkGR9G,MElGR,OFkGE,CAAoB4D,IAApB;AEjGF/B,EAAAA,GAAG,CAACkF,QAAJ,CAAaT,MAAM,GAAG,KAAK/F,QAA3B,EAAqC6F,GAAG,GAAG,KAAK7F,QAAhD,EAA0DyB,IAA1D,EAAgEA,IAAhE;AFkGE,AEjGH,SFiGQb,cAAL,GAAsB,IAAtB;AACA,SAAKC,qBAAL,GAA6B,KAA7B;AACA,SAAKC,MAAL,CAAYyC,MEDJ,CFCR,CAAoB,UAACC,KAAD;AAAA,AEAtB,SAAO,IFA0BC,CEArBqC,OAAL,CAAaW,GFAyB,CAACjD,AEAvC,GAAoBO,EFAkB,CAAvB,GEAf,CAA2B,UAACiC,IAAD;AFAZ,AEAY,KFAhC,MEA0CA,IAAI,KAAK,CAAnB;AFChC,AEDgC,GAA3B,EAAiD/C,IFCjDnC,EEDP,IFCE,GAAc,EAAd;AAEA,AEFH,QFEO4C,aAAa,GAAGC,UAAU,CAAC,YAAM;AACnC,MAAA,MAAI,CAAC/C,cAAL,GAAsB,KAAtB;AACA,MAAA,MAAI,CAACC,qBAAL,GAA6B,KAA7B;AACD,KAH6B,EAG3B,OAAO,CAHoB,CAA9B;AAKA,SAAKC,MAAL,CAAY8C,IAAZ,CAAiBF,aAAjB;AAEA,QAAIG,0BAA0B,GAAGF,UAAU,CAAC,YAAM;AAChD,MAAA,MAAI,CAAC9C,qBAAL,GAA6B,IAA7B;AACD,KAF0C,EAExC,OAAO,CAFiC,CAA3C;AAIA,SAAKC,MAAL,CAAY8C,IAAZ,CAAiBC,0BAAjB;AACD;AACF;;oBAESrC,QAAQ;AAAA;;AAChB,MAAI,KAAKZ,cAAT,EAAyB;AACvB,QAAMkD,aAAa,GAAGtC,MAAM,CAACuC,MAAP,CAAc,UAACC,KAAD;AAAA,aAAWA,KAAK,CAACC,WAAN,CAAkB,MAAlB,CAAX;AAAA,KAAd,CAAtB;AACAH,IAAAA,aAAa,CAACP,OAAd,CAAsB,UAACS,KAAD,EAAW;AAC/BxC,MAAAA,MAAM,CAAC0C,MAAP,CAAc1C,MAAM,CAAC2C,OAAP,CAAeH,KAAf,CAAd,EAAqC,CAArC;AACA,MAAA,MAAI,CAAC/C,KAAL,IAAc,EAAd;AACA,MAAA,MAAI,CAACG,SAAL,CAAe+B,SAAf,aAA8B,MAAI,CAAClC,KAAnC;;AACA,MAAA,MAAI,CAACmC,eAAL;;AACA9D,qBAAMI,aAAN,CAAoB2D,IAApB;AACD,KAND;AAOD;AACF","file":"Game.65f11b52.js","sourceRoot":"..","sourcesContent":["const MovingDirection = {\r\n  up: 0,\r\n  down: 1,\r\n  left: 2,\r\n  right: 3,\r\n};\r\n\r\nexport default MovingDirection;\r\n","const Sound = {\r\n  eatDotSound: new Audio(\"sounds/eat_dot.wav\"),\r\n  powerDotSound: new Audio(\"sounds/power_dot.wav\"),\r\n  eatGhostSound: new Audio(\"sounds/eat_ghost.wav\"),\r\n  gameOverSound: new Audio(\"sounds/game_over.wav\"),\r\n  gameWinSound: new Audio(\"sounds/game_win.wav\"),\r\n};\r\n\r\nexport default Sound;\r\n","import MovingDirection from \"./Input.js\";\r\nimport Sound from \"./Sound.js\";\r\n\r\nexport default class Pacman {\r\n  constructor(x, y, tileSize, speed, tileMap) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.tileSize = tileSize;\r\n    this.speed = speed;\r\n    this.tileMap = tileMap;\r\n\r\n    this.currentMovingDirection = null;\r\n    this.requestedMovingDirection = null;\r\n\r\n    this.pacmanAnimationTimerDefault = 10;\r\n    this.pacmanAnimationTimer = null;\r\n\r\n    this.pacmanRotation = this.Rotation.right;\r\n\r\n    this.powerDotActive = false;\r\n    this.powerDotAboutToExpire = false;\r\n    this.timers = [];\r\n\r\n    this.madeFirstMove = false;\r\n\r\n    document.addEventListener(\"keydown\", this.#keydown); // keyboard input\r\n\r\n    this.#loadPacmanImages();\r\n\r\n    //  score logic\r\n    this.score = 0;\r\n    this.highScore = undefined;\r\n    this.dom_score = document.querySelector(\"#score\");\r\n  }\r\n\r\n  Rotation = {\r\n    right: 0,\r\n    down: 1,\r\n    left: 2,\r\n    up: 3,\r\n  };\r\n\r\n  draw(ctx, pause, ghosts) {\r\n    if (!pause) {\r\n      this.#move();\r\n      this.#animate();\r\n    }\r\n    this.#eatDot();\r\n    this.#eatPowerDot();\r\n    this.#eatGhost(ghosts);\r\n\r\n    const size = this.tileSize / 2;\r\n    ctx.save();\r\n    ctx.translate(this.x + size, this.y + size);\r\n    ctx.rotate((this.pacmanRotation * 90 * Math.PI) / 180);\r\n    ctx.drawImage(\r\n      this.pacmanImages[this.pacmanImageIndex],\r\n      -size,\r\n      -size,\r\n      this.tileSize,\r\n      this.tileSize\r\n    );\r\n\r\n    ctx.restore();\r\n  }\r\n\r\n  #loadPacmanImages() {\r\n    const pacmanImage1 = new Image();\r\n    pacmanImage1.src = \"/images/pac0.png\";\r\n\r\n    const pacmanImage2 = new Image();\r\n    pacmanImage2.src = \"/images/pac1.png\";\r\n\r\n    const pacmanImage3 = new Image();\r\n    pacmanImage3.src = \"/images/pac2.png\";\r\n\r\n    this.pacmanImages = [\r\n      pacmanImage1,\r\n      pacmanImage2,\r\n      pacmanImage3,\r\n      pacmanImage2,\r\n    ];\r\n\r\n    this.pacmanImageIndex = 0;\r\n  }\r\n\r\n  // Legend: Keycode >> 37 = Left arrow; 38 = up arrow; 39 = right arrow; 40 = down arrow;\r\n  #keydown = (event) => {\r\n    if (event.keyCode == 37) {\r\n      if (this.currentMovingDirection == MovingDirection.right)\r\n        this.currentMovingDirection = MovingDirection.left;\r\n      this.requestedMovingDirection = MovingDirection.left;\r\n      this.madeFirstMove = true;\r\n    }\r\n\r\n    if (event.keyCode == 38) {\r\n      if (this.currentMovingDirection == MovingDirection.down)\r\n        this.currentMovingDirection = MovingDirection.up;\r\n      this.requestedMovingDirection = MovingDirection.up;\r\n      this.madeFirstMove = true;\r\n    }\r\n\r\n    if (event.keyCode == 39) {\r\n      if (this.currentMovingDirection == MovingDirection.left)\r\n        this.currentMovingDirection = MovingDirection.right;\r\n      this.requestedMovingDirection = MovingDirection.right;\r\n      this.madeFirstMove = true;\r\n    }\r\n\r\n    if (event.keyCode == 40) {\r\n      if (this.currentMovingDirection == MovingDirection.up)\r\n        this.currentMovingDirection = MovingDirection.down;\r\n      this.requestedMovingDirection = MovingDirection.down;\r\n      this.madeFirstMove = true;\r\n    }\r\n  };\r\n\r\n  #move() {\r\n    if (this.currentMovingDirection !== this.requestedMovingDirection) {\r\n      if (\r\n        Number.isInteger(this.x / this.tileSize) &&\r\n        Number.isInteger(this.y / this.tileSize)\r\n      ) {\r\n        if (\r\n          !this.tileMap.didCollideWithEnvironment(\r\n            this.x,\r\n            this.y,\r\n            this.requestedMovingDirection\r\n          )\r\n        )\r\n          this.currentMovingDirection = this.requestedMovingDirection;\r\n      }\r\n    }\r\n\r\n    if (\r\n      this.tileMap.didCollideWithEnvironment(\r\n        this.x,\r\n        this.y,\r\n        this.currentMovingDirection\r\n      )\r\n    ) {\r\n      this.pacmanAnimationTimer = null;\r\n      this.pacmanImageIndex = 1;\r\n      return;\r\n    } else if (\r\n      this.currentMovingDirection != null &&\r\n      this.pacmanAnimationTimer == null\r\n    ) {\r\n      this.pacmanAnimationTimer = this.pacmanAnimationTimerDefault;\r\n    }\r\n\r\n    switch (this.currentMovingDirection) {\r\n      case MovingDirection.up:\r\n        this.y -= this.speed;\r\n        this.pacmanRotation = this.Rotation.up;\r\n        break;\r\n      case MovingDirection.down:\r\n        this.y += this.speed;\r\n        this.pacmanRotation = this.Rotation.down;\r\n        break;\r\n      case MovingDirection.left:\r\n        this.x -= this.speed;\r\n        this.pacmanRotation = this.Rotation.left;\r\n        break;\r\n      case MovingDirection.right:\r\n        this.x += this.speed;\r\n        this.pacmanRotation = this.Rotation.right;\r\n        break;\r\n    }\r\n  }\r\n\r\n  #animate() {\r\n    if (this.pacmanAnimationTimer == null) {\r\n      return;\r\n    }\r\n    this.pacmanAnimationTimer--;\r\n    if (this.pacmanAnimationTimer == 0) {\r\n      this.pacmanAnimationTimer = this.pacmanAnimationTimerDefault;\r\n      this.pacmanImageIndex++;\r\n      if (this.pacmanImageIndex == this.pacmanImages.length)\r\n        this.pacmanImageIndex = 0;\r\n    }\r\n  }\r\n\r\n  #eatDot() {\r\n    if (this.tileMap.eatDot(this.x, this.y) && this.madeFirstMove) {\r\n      this.score += 1;\r\n      this.dom_score.innerHTML = `${this.score}`;\r\n      this.updateHighScore();\r\n      Sound.eatDotSound.play();\r\n    }\r\n  }\r\n\r\n  #eatPowerDot() {\r\n    if (this.tileMap.eatPowerDot(this.x, this.y)) {\r\n      this.score += 10;\r\n      this.dom_score.innerHTML = `${this.score}`;\r\n      this.updateHighScore();\r\n      Sound.powerDotSound.play();\r\n      this.powerDotActive = true;\r\n      this.powerDotAboutToExpire = false;\r\n      this.timers.forEach((timer) => clearTimeout(timer));\r\n      this.timers = [];\r\n\r\n      let powerDotTimer = setTimeout(() => {\r\n        this.powerDotActive = false;\r\n        this.powerDotAboutToExpire = false;\r\n      }, 1000 * 6);\r\n\r\n      this.timers.push(powerDotTimer);\r\n\r\n      let powerDotAboutToExpireTimer = setTimeout(() => {\r\n        this.powerDotAboutToExpire = true;\r\n      }, 1000 * 3);\r\n\r\n      this.timers.push(powerDotAboutToExpireTimer);\r\n    }\r\n  }\r\n\r\n  #eatGhost(ghosts) {\r\n    if (this.powerDotActive) {\r\n      const collideGhosts = ghosts.filter((ghost) => ghost.collideWith(this));\r\n      collideGhosts.forEach((ghost) => {\r\n        ghosts.splice(ghosts.indexOf(ghost), 1);\r\n        this.score += 50;\r\n        this.dom_score.innerHTML = `${this.score}`;\r\n        this.updateHighScore();\r\n        Sound.eatGhostSound.play();\r\n      });\r\n    }\r\n  }\r\n\r\n  updateHighScore() {\r\n    this.highScore = JSON.parse(localStorage.getItem(\"High Score\"));\r\n    this.highScore ? null : (this.highScore = this.score);\r\n    this.highScore > this.score\r\n      ? (this.highScore = this.highScore)\r\n      : (this.highScore = this.score);\r\n    localStorage.setItem(\"High Score\", JSON.stringify(this.highScore));\r\n  }\r\n}\r\n","import MovingDirection from \"./Input.js\";\r\n\r\nexport default class Ghost {\r\n  constructor(x, y, tileSize, speed, tileMap) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.tileSize = tileSize;\r\n    this.speed = speed;\r\n    this.tileMap = tileMap;\r\n\r\n    this.#loadImages();\r\n\r\n    this.movingDirection = Math.floor(\r\n      Math.random() * Object.keys(MovingDirection).length\r\n    );\r\n\r\n    this.directionTimerDefault = this.#random(10, 25);\r\n    this.directionTimer = this.directionTimerDefault;\r\n\r\n    this.scaredAboutToExpireTimerDefault = 10;\r\n    this.scaredAboutToExpireTimer = this.scaredAboutToExpireTimerDefault;\r\n  }\r\n\r\n  draw(ctx, pause, pacman) {\r\n    if (!pause) {\r\n      this.#move();\r\n      this.#changeDirection();\r\n    }\r\n    this.#setImage(ctx, pacman);\r\n  }\r\n\r\n  collideWith(pacman) {\r\n    const size = this.tileSize / 2;\r\n    if (\r\n      this.x < pacman.x + size &&\r\n      this.x + size > pacman.x &&\r\n      this.y < pacman.y + size &&\r\n      this.y + size > pacman.y\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  #setImage(ctx, pacman) {\r\n    if (pacman.powerDotActive) {\r\n      this.#setImageWhenPowerDotIsActive(pacman);\r\n    } else {\r\n      this.image = this.normalGhost;\r\n    }\r\n    ctx.drawImage(this.image, this.x, this.y, this.tileSize, this.tileSize);\r\n  }\r\n\r\n  #setImageWhenPowerDotIsActive(pacman) {\r\n    if (pacman.powerDotAboutToExpire) {\r\n      this.scaredAboutToExpireTimer--;\r\n      if (this.scaredAboutToExpireTimer === 0) {\r\n        this.scaredAboutToExpireTimer = this.scaredAboutToExpireTimerDefault;\r\n        if (this.image === this.scaredGhost) {\r\n          this.image = this.scaredGhost2;\r\n        } else {\r\n          this.image = this.scaredGhost;\r\n        }\r\n      }\r\n    } else {\r\n      this.image = this.scaredGhost;\r\n    }\r\n  }\r\n\r\n  #changeDirection() {\r\n    this.directionTimer--;\r\n    let newMoveDirection = null;\r\n    if (this.directionTimer == 0) {\r\n      this.directionTimer = this.directionTimerDefault;\r\n      newMoveDirection = Math.floor(\r\n        Math.random() * Object.keys(MovingDirection).length\r\n      );\r\n    }\r\n\r\n    if (newMoveDirection != null && this.movingDirection != newMoveDirection) {\r\n      if (\r\n        Number.isInteger(this.x / this.tileSize) &&\r\n        Number.isInteger(this.y / this.tileSize)\r\n      ) {\r\n        if (\r\n          !this.tileMap.didCollideWithEnvironment(\r\n            this.x,\r\n            this.y,\r\n            newMoveDirection\r\n          )\r\n        ) {\r\n          this.movingDirection = newMoveDirection;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  #move() {\r\n    if (\r\n      !this.tileMap.didCollideWithEnvironment(\r\n        this.x,\r\n        this.y,\r\n        this.movingDirection\r\n      )\r\n    ) {\r\n      switch (this.movingDirection) {\r\n        case MovingDirection.up:\r\n          this.y -= this.speed;\r\n          break;\r\n        case MovingDirection.down:\r\n          this.y += this.speed;\r\n          break;\r\n        case MovingDirection.left:\r\n          this.x -= this.speed;\r\n          break;\r\n        case MovingDirection.right:\r\n          this.x += this.speed;\r\n          break;\r\n      }\r\n    }\r\n  }\r\n\r\n  #random(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  #loadImages() {\r\n    this.normalGhost = new Image();\r\n    this.normalGhost.src = \"/images/ghost1.png\";\r\n\r\n    this.scaredGhost = new Image();\r\n    this.scaredGhost.src = \"/images/scaredGhost.png\";\r\n\r\n    this.scaredGhost2 = new Image();\r\n    this.scaredGhost2.src = \"/images/scaredGhost2.png\";\r\n\r\n    this.image = this.normalGhost;\r\n  }\r\n}\r\n","import Pacman from \"./Pacman.js\";\r\nimport Ghost from \"./Ghost.js\";\r\nimport MovingDirection from \"./Input.js\";\r\n\r\nexport default class TileMap {\r\n  constructor(tileSize) {\r\n    this.tileSize = tileSize;\r\n\r\n    this.yellowDot = new Image();\r\n    this.yellowDot.src = \"/images/yellowDot.png\";\r\n    // this.yellowDot.src = \"https://i.ibb.co/vsqT0FR/bonbon.gif\";\r\n\r\n    this.pinkDot = new Image();\r\n    this.pinkDot.src = \"/images/pinkDot.png\";\r\n\r\n    this.wall = new Image();\r\n    this.wall.src = \"/images/wall.png\";\r\n\r\n    this.powerDot = this.pinkDot;\r\n    this.powerDotAnmationTimerDefault = 30;\r\n    this.powerDotAnmationTimer = this.powerDotAnmationTimerDefault;\r\n  }\r\n\r\n  // Legend:>> 0 - dots; 1 - wall; 2 - empty space; 3 - ghost; 4 - pacman; 5 - power pellet\r\n  gameMap = [\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n    [1, 3, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 5, 1],\r\n    [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1],\r\n    [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 1],\r\n    [1, 0, 0, 0, 0, 1, 5, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1],\r\n    [1, 2, 2, 1, 0, 1, 0, 0, 0, 0, 0, 3, 0, 1, 0, 1, 2, 2, 1],\r\n    [1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 1],\r\n    [1, 4, 0, 0, 0, 0, 0, 1, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 1],\r\n    [1, 1, 1, 1, 0, 1, 0, 1, 1, 2, 1, 1, 0, 1, 0, 1, 1, 1, 1],\r\n    [1, 2, 2, 1, 0, 1, 0, 3, 0, 0, 0, 0, 0, 1, 0, 1, 2, 2, 1],\r\n    [1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1],\r\n    [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1],\r\n    [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 0, 1],\r\n    [1, 0, 5, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 5, 0, 1],\r\n    [1, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0, 0, 1],\r\n    [1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1],\r\n    [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1],\r\n    [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1],\r\n    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n  ];\r\n\r\n  draw(ctx) {\r\n    for (let row = 0; row < this.gameMap.length; row++) {\r\n      for (let column = 0; column < this.gameMap[row].length; column++) {\r\n        let tile = this.gameMap[row][column];\r\n        if (tile === 0) {\r\n          this.#drawDot(ctx, column, row, this.tileSize);\r\n        } else if (tile === 1) {\r\n          this.#drawWall(ctx, column, row, this.tileSize);\r\n        } else if (tile == 2) {\r\n          this.#drawBlank(ctx, column, row, this.tileSize);\r\n        } else {\r\n          this.#drawPowerDot(ctx, column, row, this.tileSize);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  #drawDot(ctx, column, row, size) {\r\n    ctx.drawImage(\r\n      this.yellowDot,\r\n      column * this.tileSize,\r\n      row * this.tileSize,\r\n      size,\r\n      size\r\n    );\r\n  }\r\n\r\n  #drawPowerDot(ctx, column, row, size) {\r\n    this.powerDotAnmationTimer--;\r\n    if (this.powerDotAnmationTimer === 0) {\r\n      this.powerDotAnmationTimer = this.powerDotAnmationTimerDefault;\r\n      if (this.powerDot == this.pinkDot) {\r\n        this.powerDot = this.yellowDot;\r\n      } else {\r\n        this.powerDot = this.pinkDot;\r\n      }\r\n    }\r\n    ctx.drawImage(this.powerDot, column * size, row * size, size, size);\r\n  }\r\n\r\n  #drawWall(ctx, column, row, size) {\r\n    ctx.drawImage(\r\n      this.wall,\r\n      column * this.tileSize,\r\n      row * this.tileSize,\r\n      size,\r\n      size\r\n    );\r\n  }\r\n\r\n  #drawBlank(ctx, column, row, size) {\r\n    ctx.fillStyle = \"black\";\r\n    ctx.fillRect(column * this.tileSize, row * this.tileSize, size, size);\r\n  }\r\n\r\n  getPacman(speed) {\r\n    for (let row = 0; row < this.gameMap.length; row++) {\r\n      for (let column = 0; column < this.gameMap[row].length; column++) {\r\n        let tile = this.gameMap[row][column];\r\n        if (tile === 4) {\r\n          // 4 --> pacman\r\n          this.gameMap[row][column] = 0;\r\n          return new Pacman(\r\n            column * this.tileSize,\r\n            row * this.tileSize,\r\n            this.tileSize,\r\n            speed,\r\n            this\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getGhosts(speed) {\r\n    const ghosts = [];\r\n\r\n    for (let row = 0; row < this.gameMap.length; row++) {\r\n      for (let column = 0; column < this.gameMap[row].length; column++) {\r\n        const tile = this.gameMap[row][column];\r\n        if (tile == 3) {\r\n          this.gameMap[row][column] = 0;\r\n          ghosts.push(\r\n            new Ghost(\r\n              column * this.tileSize,\r\n              row * this.tileSize,\r\n              this.tileSize,\r\n              speed,\r\n              this\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return ghosts;\r\n  }\r\n\r\n  setCanvasSize(canvas) {\r\n    canvas.width = this.gameMap[0].length * this.tileSize;\r\n    canvas.height = this.gameMap.length * this.tileSize;\r\n  }\r\n\r\n  didCollideWithEnvironment(x, y, direction) {\r\n    if (direction == null) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      Number.isInteger(x / this.tileSize) &&\r\n      Number.isInteger(y / this.tileSize)\r\n    ) {\r\n      let column = 0;\r\n      let row = 0;\r\n      let nextColumn = 0;\r\n      let nextRow = 0;\r\n\r\n      switch (direction) {\r\n        case MovingDirection.right:\r\n          nextColumn = x + this.tileSize;\r\n          column = nextColumn / this.tileSize;\r\n          row = y / this.tileSize;\r\n          break;\r\n        case MovingDirection.left:\r\n          nextColumn = x - this.tileSize;\r\n          column = nextColumn / this.tileSize;\r\n          row = y / this.tileSize;\r\n          break;\r\n        case MovingDirection.up:\r\n          nextRow = y - this.tileSize;\r\n          row = nextRow / this.tileSize;\r\n          column = x / this.tileSize;\r\n          break;\r\n        case MovingDirection.down:\r\n          nextRow = y + this.tileSize;\r\n          row = nextRow / this.tileSize;\r\n          column = x / this.tileSize;\r\n          break;\r\n      }\r\n      const tile = this.gameMap[row][column];\r\n      if (tile === 1) {\r\n        // if 1, we're colliding with a wall\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  didWin() {\r\n    return this.#dotsLeft() === 0;\r\n  }\r\n\r\n  #dotsLeft() {\r\n    return this.gameMap.flat().filter((tile) => tile === 0).length;\r\n  }\r\n\r\n  eatDot(x, y) {\r\n    const row = y / this.tileSize;\r\n    const column = x / this.tileSize;\r\n    if (Number.isInteger(row) && Number.isInteger(column)) {\r\n      if (this.gameMap[row][column] === 0) {\r\n        this.gameMap[row][column] = 2;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  eatPowerDot(x, y) {\r\n    const row = y / this.tileSize;\r\n    const column = x / this.tileSize;\r\n    if (Number.isInteger(row) && Number.isInteger(column)) {\r\n      const tile = this.gameMap[row][column];\r\n      if (tile === 5) {\r\n        this.gameMap[row][column] = 2;\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import TileMap from \"./TileMap.js\";\r\nimport Sound from \"./Sound.js\";\r\n\r\nconst canvas = document.getElementById(\"game-canvas\"),\r\n  ctx = canvas.getContext(\"2d\"),\r\n  GAME_OVER = document.getElementById(\"game-over\"),\r\n  YOU_WON = document.getElementById(\"you-won\"),\r\n  YOU_LOSE = document.getElementById(\"you-lose\"),\r\n  restart = document.getElementById(\"restart\"),\r\n  soundElement = document.getElementById(\"sound\"),\r\n  tileSize = 32,\r\n  speed = 2,\r\n  tileMap = new TileMap(tileSize),\r\n  pacman = tileMap.getPacman(speed),\r\n  ghosts = tileMap.getGhosts(speed);\r\n\r\nlet gameOver = false,\r\n  gameWin = false;\r\n\r\nfunction gameLoop() {\r\n  tileMap.draw(ctx);\r\n  drawGameEnd();\r\n  pacman.draw(ctx, pause(), ghosts);\r\n  ghosts.forEach((ghost) => ghost.draw(ctx, pause(), pacman));\r\n  checkGameOver();\r\n  checkGameWin();\r\n}\r\n\r\nfunction checkGameWin() {\r\n  if (!gameWin) {\r\n    gameWin = tileMap.didWin();\r\n    if (gameWin) {\r\n      Sound.gameWinSound.play();\r\n    }\r\n  }\r\n}\r\n\r\nfunction checkGameOver() {\r\n  if (!gameOver) {\r\n    gameOver = isGameOver();\r\n    if (gameOver) {\r\n      Sound.gameOverSound.play();\r\n    }\r\n  }\r\n}\r\n\r\nfunction isGameOver() {\r\n  return ghosts.some(\r\n    (ghost) => !pacman.powerDotActive && ghost.collideWith(pacman)\r\n  );\r\n}\r\n\r\nfunction pause() {\r\n  return !pacman.madeFirstMove || gameOver || gameWin;\r\n}\r\n\r\nfunction drawGameEnd() {\r\n  if (gameOver || gameWin) {\r\n    showYouWon();\r\n    drawHighScore();\r\n    if (gameOver) {\r\n      showYouLose();\r\n      drawHighScore();\r\n    }\r\n  }\r\n}\r\n\r\ntileMap.setCanvasSize(canvas);\r\nsetInterval(gameLoop, 1000 / 75);\r\n\r\nsoundElement.addEventListener(\"click\", audioManager);\r\n\r\nexport function audioManager() {\r\n  let imgSrc = soundElement.getAttribute(\"src\");\r\n  let SOUND_IMG =\r\n    imgSrc === \"/images/volume-on.png\"\r\n      ? \"/images/volume-mute.png\"\r\n      : \"/images/volume-on.png\";\r\n\r\n  soundElement.setAttribute(\"src\", SOUND_IMG);\r\n  console.log(SOUND_IMG);\r\n  Sound.gameWinSound.muted = Sound.gameWinSound.muted ? false : true;\r\n  Sound.gameOverSound.muted = Sound.gameOverSound.muted ? false : true;\r\n  Sound.eatDotSound.muted = Sound.eatDotSound.muted ? false : true;\r\n  Sound.powerDotSound.muted = Sound.powerDotSound.muted ? false : true;\r\n  Sound.eatGhostSound.muted = Sound.eatGhostSound.muted ? false : true;\r\n}\r\n\r\nrestart.addEventListener(\"click\", function () {\r\n  location.reload();\r\n});\r\n\r\nfunction showYouWon() {\r\n  GAME_OVER.style.display = \"block\";\r\n  YOU_WON.style.display = \"block\";\r\n}\r\n\r\nfunction showYouLose() {\r\n  GAME_OVER.style.display = \"block\";\r\n  YOU_LOSE.style.display = \"block\";\r\n}\r\n\r\nfunction drawHighScore() {\r\n  let highScore = JSON.parse(localStorage.getItem(\"High Score\"));\r\n  let gradient = ctx.createLinearGradient(0, 0, canvas.width / 2, 26);\r\n  gradient.addColorStop(\"0\", \"yellow\");\r\n  gradient.addColorStop(\"1\", \"#f7ae15\");\r\n  ctx.fillStyle = gradient;\r\n  ctx.textAlign = \"center\";\r\n  ctx.font = \"bold 35px 'Fun Games', sans-serif\";\r\n  ctx.fillText(\"HIGHEST SCORE : \" + highScore, canvas.width / 2, 26);\r\n}\r\n"]}